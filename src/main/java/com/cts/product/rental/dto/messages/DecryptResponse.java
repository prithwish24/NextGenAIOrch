//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.10.12 at 04:33:39 PM IST 
//


package com.cts.product.rental.dto.messages;

import java.io.Serializable;
import java.util.HashMap;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DecryptResponse complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DecryptResponse"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://com.cts.product.rental.dto.messages/}Response"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="tokenOutput" type="{http://com.cts.product.rental.dto.messages/}TokenMapModeller" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DecryptResponse", propOrder = {
    "tokenOutput"
})
public class DecryptResponse
    extends Response
    implements Serializable
{

    @XmlElement(type = TokenMapModeller.class)
    protected HashMap<String, String> tokenOutput;

    /**
     * Gets the value of the tokenOutput property.
     * 
     * @return
     *     possible object is
     *     {@link TokenMapModeller }
     *     
     */
    public HashMap<String, String> getTokenOutput() {
        return tokenOutput;
    }

    /**
     * Sets the value of the tokenOutput property.
     * 
     * @param value
     *     allowed object is
     *     {@link TokenMapModeller }
     *     
     */
    public void setTokenOutput(HashMap<String, String> value) {
        this.tokenOutput = value;
    }

}
