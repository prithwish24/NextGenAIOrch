//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.10.12 at 04:33:39 PM IST 
//


package com.cts.product.rental.dto.common.enums;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HighestUsedRateType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="HighestUsedRateType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="DAILY"/&gt;
 *     &lt;enumeration value="HOURLY"/&gt;
 *     &lt;enumeration value="WEEKLY"/&gt;
 *     &lt;enumeration value="MONTHLY"/&gt;
 *     &lt;enumeration value="RENTAL"/&gt;
 *     &lt;enumeration value="PERCENT"/&gt;
 *     &lt;enumeration value="GALLON"/&gt;
 *     &lt;enumeration value="MILES"/&gt;
 *     &lt;enumeration value="LITRE"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "HighestUsedRateType", namespace = "http://com.cts.product.rental.dto.common.enums/")
@XmlEnum
public enum HighestUsedRateType {


    /**
     * <p>Daily</p>
     * 
     */
    DAILY,

    /**
     * <p>Hourly</p>
     * 
     */
    HOURLY,

    /**
     * <p>Weekly</p>
     * 
     */
    WEEKLY,

    /**
     * <p>Monthly</p>
     * 
     */
    MONTHLY,

    /**
     * <p>per rental rate</p>
     *                     
     * 
     */
    RENTAL,

    /**
     * <p>Percent</p>
     * 
     */
    PERCENT,

    /**
     * <p>Gallon / volume</p>
     *                     
     * 
     */
    GALLON,

    /**
     * <p>Miles / distance</p>
     *                     
     * 
     */
    MILES,
    LITRE;

    public String value() {
        return name();
    }

    public static HighestUsedRateType fromValue(String v) {
        return valueOf(v);
    }

}
